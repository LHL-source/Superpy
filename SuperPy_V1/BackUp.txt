superpy:
bought.csv:
id,product_name,buy_date,buy_price,expiration_date
1,appel,2020-1-1,0.6, 2020-1-10
2,banana,2020-1-2,0.5,2020-1-9
3,appel,2020-1-2,0.6,2020-1-10
4,manderin, 2020-1-3, 0.8,2020-1-12

sold.csv:
id,bought_id,product_name,sell_date,sell_price
1,3,appel,2020-1-3,0.7
2,1,appel,2020-1-4,0.7
3,2,banana,2020-1-5,0.8

backup 11-10-2023 
main.py
import argparse
import csv
import datetime
from datetime import date
from datetime import datetime
from datetime import timedelta

from functions import date_type
#import datetime

# Do not change these lines.
__winc_id__ = "a2bc36ea784242e4989deb157d527ba0"
__human_name__ = "superpy"


# Your code below this line.
#find current day with fomate:year-month-day
current_day=date.today()
print(current_day)

#currentday plus two days works ? yes
currentDay_plus2Day =current_day +timedelta(2)
print('currentDay_plus2Day:',currentDay_plus2Day)

#hieronder :module argparse/for buy

buy_parser=argparse.ArgumentParser(description="report inventory --now ??")
buy_parser.add_argument("--product_name", type=str, help="give the name of the product choice:apple, banana, manderin") #works?y 
buy_parser.add_argument("--price", type=float, help="give the price of the product choice: ???")#works? yes 
buy_parser.add_argument("--expiration_date", type=date_type, help="Enter the expiredate in 'year-month-day'format")#works ?

buy_args=buy_parser.parse_args()
print('r44',buy_args.product_name)
print('r45',buy_args.price)
print('r46,',buy_args.expiration_date)


def main():
    pass


if __name__ == "__main__":
    main()
xxx backup 12-10-2023xxx
import argparse
import csv
import datetime
from datetime import date
from datetime import datetime
from datetime import timedelta

from functions import date_type
#import datetime

# Do not change these lines.
__winc_id__ = "a2bc36ea784242e4989deb157d527ba0"
__human_name__ = "superpy"


# Your code below this line.
#find current day with fomate:year-month-day
current_day=date.today()
print(current_day)

#currentday plus two days works ? yes
currentDay_plus2Day =current_day +timedelta(2)
print('currentDay_plus2Day:',currentDay_plus2Day)

#hieronder :module argparse/for buy
#here under define the parser and subparser
parser=argparse.ArgumentParser(description="Superpy Supermarket Inventory")
subparser=parser.add_subparsers(dest='command')

#here under define the subparser for "buy" r. 32 until r.35 works?yes good job 
buy_parser=subparser.add_parser("buy")
buy_parser.add_argument("--product_name", type=str, help="give the name of the product choice:apple, banana, manderin")
buy_parser.add_argument("--price", type=float, help="give the price of the product choice: ???")
buy_parser.add_argument("--expiration_date", type=date_type, help="Enter the expiredate in 'year-month-day'format")
args = parser.parse_args()

print('args.command: ',args.command)#w?y
print('args.product_name: ',args.product_name)#w?y
print('args.price: ',args.price)#w?y
print('args.expiration_date: ',args.expiration_date)#w?y


def main():
    pass


if __name__ == "__main__":
    main()
 xx 12-10-2023endxx

backup:17-10-2023 
# Imports
import argparse
import csv
import datetime
from datetime import date
from datetime import datetime
from datetime import timedelta

from functions import date_type
#import datetime

# Do not change these lines.
__winc_id__ = "a2bc36ea784242e4989deb157d527ba0"
__human_name__ = "superpy"


# Your code below this line.
#find current day with fomate:year-month-day
current_day=date.today()
print(current_day)

#currentday plus two days works ? yes

currentDay_plus2Day =current_day +timedelta(2)
#print('currentDay_plus2Day:',currentDay_plus2Day) #w?y

#hieronder:module argparse NO subparser w??? yesss good job
#voorbeeld:python super.py --advance-time 2
parser=argparse.ArgumentParser(description="Superpy Supermarket Inventory")
parser.add_argument('--advance_time_2',type=int, help="for advanced time 2 days ,please type:2")
#args=parser.parse_args()
#print("args.advance_time_2",args.advance_time_2)


#hieronder :module argparse/for subparser:buy
#here under define the parser and subparser
#parser=argparse.ArgumentParser(description="Superpy Supermarket Inventory")
subparser=parser.add_subparsers(dest='command')

#here under define the subparser for "buy" r. 32 until r.35 works?yes good job 
buy_parser=subparser.add_parser("buy")
buy_parser.add_argument("--product_name", type=str, help="give the name of the product choice:apple, banana, manderin")
buy_parser.add_argument("--price", type=float, help="give the price of the product for example: 0.5")
buy_parser.add_argument("--expiration_date", type=date_type, help="Enter the expiredate in 'year-month-day'format")
args = parser.parse_args()

print("args.advance_time_2",args.advance_time_2)

print('args.command: ',args.command)#w?y
print('args.product_name: ',args.product_name)#w?y
print('args.price: ',args.price)#w?y
print('args.expiration_date: ',args.expiration_date)#w?y


def main():
    pass


if __name__ == "__main__":
    main()
xx end 17-10-2023

xx backup 17-10-2023 16.27u
# Imports
import argparse
import csv
import datetime
from datetime import date
from datetime import datetime
from datetime import timedelta

from functions import date_type
#import datetime

# Do not change these lines.
__winc_id__ = "a2bc36ea784242e4989deb157d527ba0"
__human_name__ = "superpy"


# Your code below this line.
#find current day with fomate:year-month-day
#current_day=date.today()
#print(current_day)

#currentday plus two days works ? yes

#currentDay_plus2Day =current_day +timedelta(2)
#print('currentDay_plus2Day:',currentDay_plus2Day) #w?y


#hieronder:module argparse NO subparser w??? yesss good job
#voorbeeld:python super.py --advance-time 2
#parser=argparse.ArgumentParser(description="Superpy Supermarket Inventory")
#parser.add_argument('--advance_time_2',type=int, help="for advanced time 2 days ,please type:2")
#args=parser.parse_args()
#print("args.advance_time_2",args.advance_time_2)#w? yes good job


#hieronder :module argparse/for buy#
#here under define the parser and subparser
#parser=argparse.ArgumentParser(description="Superpy Supermarket Inventory")
#subparser=parser.add_subparsers(dest='command')

#here under define the subparser for "buy" r. 32 until r.35 works?yes good job 
#buy_parser=subparser.add_parser("buy")
#buy_parser.add_argument("--product_name", type=str, help="give the name of the product choice:apple, banana, manderin")
#buy_parser.add_argument("--price", type=float, help="give the price of the product for example: 0.5")
#buy_parser.add_argument("--expiration_date", type=date_type, help="Enter the expiredate in 'year-month-day'format")
#args = parser.parse_args()

#print('args.command: ',args.command)#w?y
#print('args.product_name: ',args.product_name)#w?y
#print('args.price: ',args.price)#w?y
#print('args.expiration_date: ',args.expiration_date)#w?y



def main():
    pass


if __name__ == "__main__":
    main()

xx endxx
backup date 19-10-2023
backup:17-10-2023 16.28 u
super.py
# Imports
import argparse
import csv
import datetime
from datetime import date
from datetime import datetime
from datetime import timedelta

from functions import date_type
#import datetime

# Do not change these lines.
__winc_id__ = "a2bc36ea784242e4989deb157d527ba0"
__human_name__ = "superpy"


# Your code below this line.
#find current day with fomate:year-month-day
#current_day=date.today()
#print(current_day)

#currentday plus two days works ? yes

#currentDay_plus2Day =current_day +timedelta(2)
#print('currentDay_plus2Day:',currentDay_plus2Day) #w?y


#hieronder:module argparse NO subparser w??? yesss good job
#voorbeeld:python super.py --advance-time 2
#parser=argparse.ArgumentParser(description="Superpy Supermarket Inventory")
#parser.add_argument('--advance_time_2',type=int, help="for advanced time 2 days ,please type:2")
#args=parser.parse_args()
#print("args.advance_time_2",args.advance_time_2)#w? yes good job


#hieronder :module argparse/for buy# w?yes
#here under define the parser and subparser
#parser=argparse.ArgumentParser(description="Superpy Supermarket Inventory")
#subparser=parser.add_subparsers(dest='command')

#here under define the subparser for "buy" r. 32 until r.35 works?yes good job 
#buy_parser=subparser.add_parser("buy")
#buy_parser.add_argument("--product_name", type=str, help="give the name of the product choice:apple, banana, manderin")
#buy_parser.add_argument("--price", type=float, help="give the price of the product for example: 0.5")
#buy_parser.add_argument("--expiration_date", type=date_type, help="Enter the expiredate in 'year-month-day'format")
#args = parser.parse_args()

#print('args.command: ',args.command)#w?y
#print('args.product_name: ',args.product_name)#w?y
#print('args.price: ',args.price)#w?y
#print('args.expiration_date: ',args.expiration_date)#w?y



def main():
    pass
xxx end  backup:17-10-2023 16.28 u xxx

if __name__ == "__main__":
    main()

xxx endxxx
backup here under of 19-10-2023 only for sub-parser=sell #w?yes well done
#hieronder:module argparse/for sub-parser=sell #w ?yes gooooood job
#define parser and subparser:
#parser=argparse.ArgumentParser(description="Superpy Supermarket Inventory")
#subparser=parser.add_subparsers(dest='command')

#here under define the subparser for "sell"
#sell_parser=subparser.add_parser("sell")
#sell_parser.add_argument("--product_name", type=str, help="give the name of the product choice:apple, banana, manderin")
#sell_parser.add_argument("--price", type=float, help="give the price of the product for example: 0.7")
#args = parser.parse_args()

##print('args.command: ',args.command)#w?
#print('args.product_name: ',args.product_name)#w?
#print('args.price: ',args.price)#w?y
xxx end xxx